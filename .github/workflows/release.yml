name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build-and-publish:
    name: Build and publish artefacts
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Configure Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build distributions
        run: |
          ./gradlew --no-daemon --stacktrace clean test shadowJar jar lcodRunnerLib

      - name: Collect artefacts
        id: artefacts
        run: |
          set -euo pipefail
          mkdir -p release
          RAW="${GITHUB_REF_NAME}"
          VERSION="${RAW#lcod-run-}"
          VERSION="${VERSION#v}"
          FAT_JAR="build/libs/lcod-run-${VERSION}.jar"
          THIN_JAR="build/libs/lcod-kernel-java-${VERSION}.jar"
          EMBED_DIR="build/lcod-runner/libs"

          if [[ ! -f "${FAT_JAR}" ]]; then
            echo "Fat jar not found at ${FAT_JAR}" >&2
            exit 1
          fi
          if [[ ! -f "${THIN_JAR}" ]]; then
            echo "Thin jar not found at ${THIN_JAR}" >&2
            exit 1
          fi
          if [[ ! -d "${EMBED_DIR}" ]]; then
            echo "Embedding directory not found at ${EMBED_DIR}" >&2
            exit 1
          fi

          cp "${FAT_JAR}" "release/"
          cp "${THIN_JAR}" "release/"
          zip -j "release/lcod-kernel-java-${VERSION}-embedding.zip" "${EMBED_DIR}"/*.jar

          pushd release >/dev/null
          for file in *; do
            sha256sum "${file}" > "${file}.sha256"
          done
          popd >/dev/null

          {
            echo "version=${VERSION}"
            echo "files<<EOF"
            ls release
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: release/*
          tag_name: ${{ github.ref_name }}
          name: lcod-kernel-java ${{ steps.artefacts.outputs.version }}
          body: |
            lcod-kernel-java ${{ steps.artefacts.outputs.version }}

            Assets:
            - lcod-run-${{ steps.artefacts.outputs.version }}.jar — standalone fat jar with embedded runtime
            - lcod-kernel-java-${{ steps.artefacts.outputs.version }}.jar — thin jar for embedding
            - lcod-kernel-java-${{ steps.artefacts.outputs.version }}-embedding.zip — thin jar + runtime dependencies
