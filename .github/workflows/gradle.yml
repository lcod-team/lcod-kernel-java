name: Java Tests

on:
  push:
    branches:
      - main
      - develop
      - feature/**
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout lcod-spec
        uses: actions/checkout@v4
        with:
          repository: lcod-team/lcod-spec
          path: lcod-spec

      - name: Checkout lcod-resolver
        uses: actions/checkout@v4
        with:
          repository: lcod-team/lcod-resolver
          path: lcod-resolver

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            lcod-spec/package-lock.json
            lcod-resolver/package-lock.json

      - name: Install spec dependencies
        working-directory: lcod-spec
        run: npm ci

      - name: Install resolver dependencies
        working-directory: lcod-resolver
        run: npm ci

      - name: Cache Gradle directories
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Run Gradle checks and build artifacts
        env:
          SPEC_REPO_PATH: ${{ github.workspace }}/lcod-spec
          RESOLVER_REPO_PATH: ${{ github.workspace }}/lcod-resolver
        run: ./gradlew check lcodRunJar lcodRunnerLib

      - name: Run spec fixtures
        env:
          SPEC_REPO_PATH: ${{ github.workspace }}/lcod-spec
          RESOLVER_REPO_PATH: ${{ github.workspace }}/lcod-resolver
        run: ./gradlew specTests

      - name: Upload lcod-run jar
        uses: actions/upload-artifact@v4
        with:
          name: lcod-run-fatjar
          path: build/libs/lcod-run-*.jar
          if-no-files-found: error

      - name: Upload embedding bundle
        uses: actions/upload-artifact@v4
        with:
          name: lcod-runner-libs
          path: build/lcod-runner/libs
          if-no-files-found: error

  release:
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download lcod-run jar artifact
        uses: actions/download-artifact@v4
        with:
          name: lcod-run-fatjar
          path: dist

      - name: Download embedding bundle artifact
        uses: actions/download-artifact@v4
        with:
          name: lcod-runner-libs
          path: dist/runner-libs

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/lcod-run-*.jar
            dist/runner-libs/**/*
